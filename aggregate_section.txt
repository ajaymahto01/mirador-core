
  # Aggregate Functions (2 parameterized endpoints)
  /metrics/query/aggregate/sum:
    post:
      summary: MetricsQL sum aggregate function
      description: Calculates the sum of all values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Sum aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/avg:
    post:
      summary: MetricsQL avg aggregate function
      description: Calculates the average of all values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Average aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/count:
    post:
      summary: MetricsQL count aggregate function
      description: Counts the number of time series in the input
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Count aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/min:
    post:
      summary: MetricsQL min aggregate function
      description: Returns the minimum value across all time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Minimum aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/max:
    post:
      summary: MetricsQL max aggregate function
      description: Returns the maximum value across all time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Maximum aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/median:
    post:
      summary: MetricsQL median aggregate function
      description: Calculates the median value across all time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Median aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/quantile:
    post:
      summary: MetricsQL quantile aggregate function
      description: Calculates the quantile value across all time series (requires 'quantile' parameter)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Quantile aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/topk:
    post:
      summary: MetricsQL topk aggregate function
      description: Returns the top k time series by value (requires 'k' parameter)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Top k aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/bottomk:
    post:
      summary: MetricsQL bottomk aggregate function
      description: Returns the bottom k time series by value (requires 'k' parameter)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Bottom k aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/distinct:
    post:
      summary: MetricsQL distinct aggregate function
      description: Returns distinct values from the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Distinct values result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/histogram:
    post:
      summary: MetricsQL histogram aggregate function
      description: Creates a histogram from the input time series values
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Histogram aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/outliers_iqr:
    post:
      summary: MetricsQL outliers_iqr aggregate function
      description: Detects outliers using the interquartile range method
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Outliers detection result using IQR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/outliersk:
    post:
      summary: MetricsQL outliersk aggregate function
      description: Detects outliers using the k-sigma method (requires 'k' parameter)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Outliers detection result using k-sigma
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/stddev:
    post:
      summary: MetricsQL stddev aggregate function
      description: Calculates the standard deviation of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Standard deviation aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/stdvar:
    post:
      summary: MetricsQL stdvar aggregate function
      description: Calculates the standard variance of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Standard variance aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/mad:
    post:
      summary: MetricsQL mad aggregate function
      description: Calculates the median absolute deviation of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Median absolute deviation aggregation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/zscore:
    post:
      summary: MetricsQL zscore aggregate function
      description: Calculates z-scores for values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Z-score calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/mode:
    post:
      summary: MetricsQL mode aggregate function
      description: Returns the most frequent value in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Mode calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/skewness:
    post:
      summary: MetricsQL skewness aggregate function
      description: Calculates the skewness of the distribution of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Skewness calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/kurtosis:
    post:
      summary: MetricsQL kurtosis aggregate function
      description: Calculates the kurtosis of the distribution of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Kurtosis calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/cov:
    post:
      summary: MetricsQL cov aggregate function
      description: Calculates the covariance between two time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Covariance calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/corr:
    post:
      summary: MetricsQL corr aggregate function
      description: Calculates the correlation coefficient between two time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Correlation calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/entropy:
    post:
      summary: MetricsQL entropy aggregate function
      description: Calculates the entropy of the distribution of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Entropy calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/range:
    post:
      summary: MetricsQL range aggregate function
      description: Calculates the range (max - min) of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Range calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/iqr:
    post:
      summary: MetricsQL iqr aggregate function
      description: Calculates the interquartile range (Q3 - Q1) of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Interquartile range calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/percentile:
    post:
      summary: MetricsQL percentile aggregate function
      description: Calculates a specific percentile of values in the input time series (requires 'p' parameter)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Percentile calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/geomean:
    post:
      summary: MetricsQL geomean aggregate function
      description: Calculates the geometric mean of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Geometric mean calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/harmean:
    post:
      summary: MetricsQL harmean aggregate function
      description: Calculates the harmonic mean of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Harmonic mean calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/trimean:
    post:
      summary: MetricsQL trimean aggregate function
      description: Calculates the trimean (average of median and quartiles) of values in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Trimean calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/mode_multi:
    post:
      summary: MetricsQL mode_multi aggregate function
      description: Returns all modes (most frequent values) in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Multiple modes calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/count_values:
    post:
      summary: MetricsQL count_values aggregate function
      description: Counts occurrences of each distinct value in the input time series
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Value counts result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/increase:
    post:
      summary: MetricsQL increase aggregate function
      description: Calculates the increase in counter values over the time range
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Increase calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/rate:
    post:
      summary: MetricsQL rate aggregate function
      description: Calculates the per-second rate of increase of counter values
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Rate calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/irate:
    post:
      summary: MetricsQL irate aggregate function
      description: Calculates the instant rate of increase of counter values
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Instant rate calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/delta:
    post:
      summary: MetricsQL delta aggregate function
      description: Calculates the difference between the first and last values in the time range
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Delta calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'

  /metrics/query/aggregate/idelta:
    post:
      summary: MetricsQL idelta aggregate function
      description: Calculates the instant difference between the last two values
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQLFunctionRequest'
      responses:
        '200':
          description: Instant delta calculation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQLQueryResponse'
