apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mirador-core.fullname" . }}
  labels:
    {{- include "mirador-core.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mirador-core.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mirador-core.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if and .Values.config.enabled (not .Values.config.existingConfigMap) }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if and .Values.alertRules.enabled (not .Values.alertRules.existingConfigMap) }}
        checksum/alert-rules: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- /* Optional initContainer: wait for Valkey subchart to be ready */}}
      {{- if and .Values.waitFor.valkey.enabled .Values.valkey.enabled }}
      initContainers:
        - name: wait-for-valkey
          image: "{{ .Values.waitFor.valkey.image.repository }}:{{ .Values.waitFor.valkey.image.tag }}"
          imagePullPolicy: {{ .Values.waitFor.valkey.image.pullPolicy }}
          command:
            - sh
            - -c
            - >-
              echo "Waiting for Valkey at {{ include "mirador-core.valkeyHeadlessHost" . }}:6379";
              START=$(date +%s);
              until redis-cli -h {{ include "mirador-core.valkeyHeadlessHost" . }} -p 6379 PING 2>/dev/null | grep -q PONG; do
                NOW=$(date +%s);
                ELAPSED=$((NOW-START));
                if [ $ELAPSED -ge {{ .Values.waitFor.valkey.timeoutSeconds }} ]; then
                  echo "Timeout waiting for Valkey after $ELAPSED seconds";
                  exit 1;
                fi;
                echo "Valkey not ready yet... ($ELAPSED s)";
                sleep {{ .Values.waitFor.valkey.intervalSeconds }};
              done;
              echo "Valkey is ready.";
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ default (include "mirador-core.fullname" .) .Values.serviceAccount.name | quote }}
      {{- else }}
      serviceAccountName: {{ default "default" .Values.serviceAccount.name | quote }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: mirador-core
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          ports:
            - name: http-api
              containerPort: 8010
              protocol: TCP
            - name: grpc
              containerPort: 9090
              protocol: TCP
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- /* App uses Weaviate via config (no Vitess envs) */}}
            {{- range .Values.extraEnv }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- /* Force single-node mode when Valkey subchart is enabled by explicitly setting VALKEY_CACHE_NODES */}}
            {{- if .Values.valkey.enabled }}
            - name: VALKEY_CACHE_NODES
              value: "{{ include "mirador-core.valkeyHeadlessHost" . }}:6379"
            {{- end }}
            {{- /* Optionally source REDIS_PASSWORD directly from valkey subchart secret */ -}}
            {{- if and .Values.valkey.enabled .Values.valkey.auth.enabled (not .Values.secrets.create) }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ default (printf "%s-valkey" .Release.Name) .Values.valkey.auth.secretName }}
                  key: {{ default "valkey-password" .Values.valkey.auth.passwordKey }}
            {{- end }}
          {{- if .Values.envFrom }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
            {{- /* Auto-attach our generated Secret if enabled */}}
            {{- if .Values.secrets.create }}
            - secretRef:
                name: {{ default (printf "%s-mirador-env" (include "mirador-core.fullname" .)) .Values.secrets.name }}
            {{- else if .Values.secrets.name }}
            - secretRef:
                name: {{ .Values.secrets.name }}
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/mirador
              readOnly: true
            {{- if .Values.alertRules.enabled }}
            - name: alert-rules
              mountPath: /etc/mirador/alert-rules.yaml
              subPath: alert-rules.yaml
              readOnly: true
            {{- end }}
            {{- if and .Values.search.enable_bleve .Values.bleveStorage.enabled }}
            - name: bleve-storage
              mountPath: /var/lib/mirador/bleve
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: http-api
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: http-api
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.probes.startup.path }}
              port: http-api
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.extraContainers }}
        {{- toYaml .Values.extraContainers | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ default (include "mirador-core.fullname" .) .Values.config.existingConfigMap }}
        {{- if .Values.alertRules.enabled }}
        - name: alert-rules
          configMap:
            name: {{ default (printf "%s-alert-rules" (include "mirador-core.fullname" .)) .Values.alertRules.existingConfigMap }}
        {{- end }}
        {{- if and .Values.search.enable_bleve .Values.bleveStorage.enabled }}
        - name: bleve-storage
          persistentVolumeClaim:
            claimName: {{ include "mirador-core.fullname" . }}-bleve
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
